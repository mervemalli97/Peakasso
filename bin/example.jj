/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */
options
{
  LOOKAHEAD = 1;
  CHOICE_AMBIGUITY_CHECK = 2;
  OTHER_AMBIGUITY_CHECK = 1;
  STATIC = true;
  DEBUG_PARSER = false;
  DEBUG_LOOKAHEAD = false;
  DEBUG_TOKEN_MANAGER = false;
  ERROR_REPORTING = true;
  JAVA_UNICODE_ESCAPE = false;
  UNICODE_INPUT = false;
  IGNORE_CASE = false;
  USER_TOKEN_MANAGER = false;
  USER_CHAR_STREAM = false;
  BUILD_PARSER = true;
  BUILD_TOKEN_MANAGER = true;
  SANITY_CHECK = true;
  FORCE_LA_CHECK = false;
}

PARSER_BEGIN(Peakasso)

public class Peakasso
{
  public static void main(String args []) throws ParseException
  {
	JavaCCParser parser;
    parser = new JavaCCParser(new java.io.FileInputStream("input.txt"));
    try {
      parser.peakasso();
      System.out.println("JavaCC Parser:  Java program parsed successfully.");
    } catch (ParseException e) {
      System.out.println(e.getMessage());
      System.out.println("JavaCC Parser:  Encountered errors during parse.");
    }
  }
}

PARSER_END(Peakasso)

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"
}

TOKEN : /* OPERATORS */
{
  < PLUS : "+" >
| < MINUS : "-" >
| < MULTIPLY : "*" >
| < DIVIDE : "/" >
}

TOKEN :
{
  < CONSTANT : (< DIGIT >)+ >
| < #DIGIT : [ "0"-"9" ] >
| < ID : ["a"-"z","A"-"Z"] ( ["a"-"z","A"-"Z","0"-"9"])*>
| < int_lit : (["0"-"9"])+ >
| < message: (["a"-"z","A"-"Z","0"-"9"," "])* >
}

SPECIAL_TOKEN :
{
  <SINGLE_LINE_COMMENT: "!!" (~["\n","\r"])* ("\n"|"\r"|"\r\n")>
}
	
public char[][] canvas;
public int cursorX, cursorY, canvasX, canvasY;
void peakasso():
{
	int x, y;	
}
{
	"PROGRAM"
	< ID >
	";"
	(
	  canvas_init()
	| exhibit_stmt()
	)
}

void canvas_init(): {}
{
  	"CANVAS-INIT-SECTION" ":"
  	canvas_size_init()
	cursor_pos_init()
}

void canvas_size_init(int canvasX, int canvasY, char[][] canvas):
{
  int x,y;
}
{
	"CONST"
	"CanvasX" "="
	x = < int_lit > { canvasX = x; } 
	";"
	"CanvasY" "="
	y = < int_lit > { canvasY = y; }
	";"
	{
	  	canvas = new char[canvasX][canvasY];
		for(int i = 0; i < canvasX; i++) {
			for (int j = 0; j < canvasY; j++) {
				canvas[i][j] = '*';
			}
		} 
	}
}

void cursor_pos_init():
{
  int x,y;
}
{
	"CursorX" "="
	x = < int_lit >; { cursorX = x; }
	";"
	"CursorY" "="
	y = < int_lit >; { cursorY = y; }
	";"
	{
	  	canvas[cursorX][cursorY] = 'a'
	}
}


void exhibit_stmt(): {}
{ 
	"EXHIBIT-CANVAS" ";" { System.out.pritln(canvas); }
}


  